(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{74:function(n,e,t){"use strict";t.r(e),t.d(e,"frontMatter",(function(){return r})),t.d(e,"metadata",(function(){return s})),t.d(e,"toc",(function(){return g})),t.d(e,"default",(function(){return c}));var i=t(3),o=t(7),a=(t(0),t(90)),r={id:"organization",title:"Organization"},s={unversionedId:"organization",id:"organization",isDocsHomePage:!1,title:"Organization",description:"Get organizations list",source:"@site/docs/organization.md",slug:"/organization",permalink:"/sherl-sdk-js/docs/organization",editUrl:"https://github.com/Winzana/sherl-sdk-js/edit/master/docs/docs/organization.md",version:"current"},g=[{value:"Get organizations list",id:"get-organizations-list",children:[]},{value:"Get one organizations by id",id:"get-one-organizations-by-id",children:[]},{value:"Get public organizations list",id:"get-public-organizations-list",children:[]},{value:"Get public one organizations by id",id:"get-public-one-organizations-by-id",children:[]},{value:"Get public one organizations by slug",id:"get-public-one-organizations-by-slug",children:[]}],l={toc:g};function c(n){var e=n.components,t=Object(o.a)(n,["components"]);return Object(a.b)("wrapper",Object(i.a)({},l,t,{components:e,mdxType:"MDXLayout"}),Object(a.b)("h2",{id:"get-organizations-list"},"Get organizations list"),Object(a.b)("p",null,"To retrieve organizations list"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-ts"},"const organizations = await sherl.organization().list(1, 10, {\n  latitude: '44.94354',\n  longitude: '4.541346',\n  distance: '100km',\n}); // These are example, use what you need\n\nconst organizations = await sherl\n  .organization()\n  .list(number_of_page, number_of_item_per_page);\n")),Object(a.b)("p",null,"Return object"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-ts"},'{\n  "results": [\n      {\n        id: string;\n        uri: string;\n        sponsorshipCode: string;\n        sponsoredByCode: string;\n        sponsoredByUri: string;\n        slug: string;\n        consumerId: string;\n        legalName: string;\n        location: IPlace;\n        myAddresses: IGeoCoordinates[];\n        aggregateRating: number;\n        subOrganizations: IOrganizationResponse[];\n        email: string;\n        employees: IEmployee[];\n        wallet: IWallet;\n        isPaymentAllowed: boolean;\n        enabled: boolean;\n        faxNumber: string;\n        phoneNumber: string;\n        website: string;\n        founders: IFounder[];\n        foundingDate: Date;\n        knowsLanguage: ITaxonomy[];\n        logo: IImageObject;\n        backgroundImage: IImageObject;\n        numberOfEmployees: number;\n        parentOrganization: IOrganizationResponse;\n        slogan: string;\n        siret: number;\n        smokingAllowed: boolean;\n        openNow: boolean;\n        openingHoursSpecification: IOpeningHoursSpecification[];\n        isAccessibleForFree: boolean;\n        isComingSoon: boolean;\n        photos: IImageObject[];\n        serviceType: ITaxonomy[];\n        types: string[];\n        advertisingText: string;\n        communication: IOrganizationCommunication;\n        geopoint: string;\n        createdAt: Date;\n        updatedAt: Date;\n        metadatas: { [key: string]: any };\n        categories: ICategoryResponse[];\n        products: IProductResponse[];\n        events: ICalendarEvent[];\n        isRoaming: boolean;\n        is: boolean;\n        calendarId: string;\n        opinion: number;\n        opinionCount: number;\n        blackListPersons: string[];\n        thirdParty: {\n            facebook: {\n            accessToken: string;\n            longLivedUserAccessToken: string;\n            expirationDate: Date;\n            userID: string;\n            };\n        };\n        statistics: {\n            firstVisit: Date;\n            totalOrder: number;\n            amountTotalOrder: number;\n            subscription: ISubscription;\n            opinion: number;\n        };\n        quotas: { [key: string]: IQuotas };\n        configs: IPersonConfigValue[];\n        displayed: {\n            actualityContent: string;\n            actualityTitle: string;\n            backgroundImg: string;\n            logoImg: string;\n            highlightImg: string;\n            city: string;\n            id: string;\n            isBarService: boolean;\n            isOpen: boolean;\n            latitude: number;\n            longitude: number;\n            name: string;\n            position: string;\n            type: string;\n            weekTime: IDays[];\n            metadatas: any;\n        }\n      }],\n  "view": {\n    "total": number_of_item,\n    "page": "1",\n    "itemsPerPage": "10"\n  }\n')),Object(a.b)("h2",{id:"get-one-organizations-by-id"},"Get one organizations by id"),Object(a.b)("p",null,"To retrieve an organization by ID"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-ts"},"const organization = await sherl.organization().one('organizationId');\n")),Object(a.b)("p",null,"Return object"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-ts"},"{\n    id: string;\n    uri: string;\n    sponsorshipCode: string;\n    sponsoredByCode: string;\n    sponsoredByUri: string;\n    slug: string;\n    consumerId: string;\n    legalName: string;\n    location: IPlace;\n    myAddresses: IGeoCoordinates[];\n    aggregateRating: number;\n    subOrganizations: IOrganizationResponse[];\n    email: string;\n    employees: IEmployee[];\n    wallet: IWallet;\n    isPaymentAllowed: boolean;\n    enabled: boolean;\n    faxNumber: string;\n    phoneNumber: string;\n    website: string;\n    founders: IFounder[];\n    foundingDate: Date;\n    knowsLanguage: ITaxonomy[];\n    logo: IImageObject;\n    backgroundImage: IImageObject;\n    numberOfEmployees: number;\n    parentOrganization: IOrganizationResponse;\n    slogan: string;\n    siret: number;\n    smokingAllowed: boolean;\n    openNow: boolean;\n    openingHoursSpecification: IOpeningHoursSpecification[];\n    isAccessibleForFree: boolean;\n    isComingSoon: boolean;\n    photos: IImageObject[];\n    serviceType: ITaxonomy[];\n    types: string[];\n    advertisingText: string;\n    communication: IOrganizationCommunication;\n    geopoint: string;\n    createdAt: Date;\n    updatedAt: Date;\n    metadatas: { [key: string]: any };\n    categories: ICategoryResponse[];\n    products: IProductResponse[];\n    events: ICalendarEvent[];\n    isRoaming: boolean;\n    is: boolean;\n    calendarId: string;\n    opinion: number;\n    opinionCount: number;\n    blackListPersons: string[];\n    thirdParty: {\n        facebook: {\n        accessToken: string;\n        longLivedUserAccessToken: string;\n        expirationDate: Date;\n        userID: string;\n        };\n    };\n    statistics: {\n        firstVisit: Date;\n        totalOrder: number;\n        amountTotalOrder: number;\n        subscription: ISubscription;\n        opinion: number;\n    };\n    quotas: { [key: string]: IQuotas };\n    configs: IPersonConfigValue[];\n    displayed: {\n        actualityContent: string;\n        actualityTitle: string;\n        backgroundImg: string;\n        logoImg: string;\n        highlightImg: string;\n        city: string;\n        id: string;\n        isBarService: boolean;\n        isOpen: boolean;\n        latitude: number;\n        longitude: number;\n        name: string;\n        position: string;\n        type: string;\n        weekTime: IDays[];\n        metadatas: any;\n    }\n}\n")),Object(a.b)("h2",{id:"get-public-organizations-list"},"Get public organizations list"),Object(a.b)("p",null,"To retrieve public organizations list"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-ts"},"const publicorganizations = await sherl.organization().publicList(1, 10, {\n  latitude: '44.94354',\n  longitude: '4.541346',\n  distance: '28km',\n}); // These are example, use what you need\n\nconst organizations = await sherl.organization().list(number_of_page, number_of_item_per_page, { your_keys: \"your_value\"});\n")),Object(a.b)("p",null,"Return object"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-ts"},'{\n  "results": [\n      {\n        id: string;\n        uri: string;\n        sponsorshipCode: string;\n        sponsoredByCode: string;\n        sponsoredByUri: string;\n        slug: string;\n        consumerId: string;\n        legalName: string;\n        location: IPlace;\n        myAddresses: IGeoCoordinates[];\n        aggregateRating: number;\n        subOrganizations: IOrganizationResponse[];\n        email: string;\n        employees: IEmployee[];\n        wallet: IWallet;\n        isPaymentAllowed: boolean;\n        enabled: boolean;\n        faxNumber: string;\n        phoneNumber: string;\n        website: string;\n        founders: IFounder[];\n        foundingDate: Date;\n        knowsLanguage: ITaxonomy[];\n        logo: IImageObject;\n        backgroundImage: IImageObject;\n        numberOfEmployees: number;\n        parentOrganization: IOrganizationResponse;\n        slogan: string;\n        siret: number;\n        smokingAllowed: boolean;\n        openNow: boolean;\n        openingHoursSpecification: IOpeningHoursSpecification[];\n        isAccessibleForFree: boolean;\n        isComingSoon: boolean;\n        photos: IImageObject[];\n        serviceType: ITaxonomy[];\n        types: string[];\n        advertisingText: string;\n        communication: IOrganizationCommunication;\n        geopoint: string;\n        createdAt: Date;\n        updatedAt: Date;\n        metadatas: { [key: string]: any };\n        categories: ICategoryResponse[];\n        products: IProductResponse[];\n        events: ICalendarEvent[];\n        isRoaming: boolean;\n        is: boolean;\n        calendarId: string;\n        opinion: number;\n        opinionCount: number;\n        blackListPersons: string[];\n        thirdParty: {\n            facebook: {\n            accessToken: string;\n            longLivedUserAccessToken: string;\n            expirationDate: Date;\n            userID: string;\n            };\n        };\n        statistics: {\n            firstVisit: Date;\n            totalOrder: number;\n            amountTotalOrder: number;\n            subscription: ISubscription;\n            opinion: number;\n        };\n        quotas: { [key: string]: IQuotas };\n        configs: IPersonConfigValue[];\n        displayed: {\n            actualityContent: string;\n            actualityTitle: string;\n            backgroundImg: string;\n            logoImg: string;\n            highlightImg: string;\n            city: string;\n            id: string;\n            isBarService: boolean;\n            isOpen: boolean;\n            latitude: number;\n            longitude: number;\n            name: string;\n            position: string;\n            type: string;\n            weekTime: IDays[];\n            metadatas: any;\n        }\n      }],\n  "view": {\n    "total": number_of_item,\n    "page": "1",\n    "itemsPerPage": "10"\n  }\n')),Object(a.b)("h2",{id:"get-public-one-organizations-by-id"},"Get public one organizations by id"),Object(a.b)("p",null,"To retrieve public organizations by id"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-ts"},"const publicorganizationid = await sherl\n  .organization()\n  .publicOneId('organizationId');\n")),Object(a.b)("p",null,"Return object"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-ts"},"{\n    id: string;\n    uri: string;\n    sponsorshipCode: string;\n    sponsoredByCode: string;\n    sponsoredByUri: string;\n    slug: string;\n    consumerId: string;\n    legalName: string;\n    location: IPlace;\n    myAddresses: IGeoCoordinates[];\n    aggregateRating: number;\n    subOrganizations: IOrganizationResponse[];\n    email: string;\n    employees: IEmployee[];\n    wallet: IWallet;\n    isPaymentAllowed: boolean;\n    enabled: boolean;\n    faxNumber: string;\n    phoneNumber: string;\n    website: string;\n    founders: IFounder[];\n    foundingDate: Date;\n    knowsLanguage: ITaxonomy[];\n    logo: IImageObject;\n    backgroundImage: IImageObject;\n    numberOfEmployees: number;\n    parentOrganization: IOrganizationResponse;\n    slogan: string;\n    siret: number;\n    smokingAllowed: boolean;\n    openNow: boolean;\n    openingHoursSpecification: IOpeningHoursSpecification[];\n    isAccessibleForFree: boolean;\n    isComingSoon: boolean;\n    photos: IImageObject[];\n    serviceType: ITaxonomy[];\n    types: string[];\n    advertisingText: string;\n    communication: IOrganizationCommunication;\n    geopoint: string;\n    createdAt: Date;\n    updatedAt: Date;\n    metadatas: { [key: string]: any };\n    categories: ICategoryResponse[];\n    products: IProductResponse[];\n    events: ICalendarEvent[];\n    isRoaming: boolean;\n    is: boolean;\n    calendarId: string;\n    opinion: number;\n    opinionCount: number;\n    blackListPersons: string[];\n    thirdParty: {\n        facebook: {\n        accessToken: string;\n        longLivedUserAccessToken: string;\n        expirationDate: Date;\n        userID: string;\n        };\n    };\n    statistics: {\n        firstVisit: Date;\n        totalOrder: number;\n        amountTotalOrder: number;\n        subscription: ISubscription;\n        opinion: number;\n    };\n    quotas: { [key: string]: IQuotas };\n    configs: IPersonConfigValue[];\n    displayed: {\n        actualityContent: string;\n        actualityTitle: string;\n        backgroundImg: string;\n        logoImg: string;\n        highlightImg: string;\n        city: string;\n        id: string;\n        isBarService: boolean;\n        isOpen: boolean;\n        latitude: number;\n        longitude: number;\n        name: string;\n        position: string;\n        type: string;\n        weekTime: IDays[];\n        metadatas: any;\n    }\n}\n")),Object(a.b)("h2",{id:"get-public-one-organizations-by-slug"},"Get public one organizations by slug"),Object(a.b)("p",null,"To retrieve public organizations by slug"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-ts"},"const publicorganizationslug = await sherl\n  .organization()\n  .publicOneSlug('organizationSlug');\n")),Object(a.b)("p",null,"Return object"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-ts"},"{\n    id: string;\n    uri: string;\n    sponsorshipCode: string;\n    sponsoredByCode: string;\n    sponsoredByUri: string;\n    slug: string;\n    consumerId: string;\n    legalName: string;\n    location: IPlace;\n    myAddresses: IGeoCoordinates[];\n    aggregateRating: number;\n    subOrganizations: IOrganizationResponse[];\n    email: string;\n    employees: IEmployee[];\n    wallet: IWallet;\n    isPaymentAllowed: boolean;\n    enabled: boolean;\n    faxNumber: string;\n    phoneNumber: string;\n    website: string;\n    founders: IFounder[];\n    foundingDate: Date;\n    knowsLanguage: ITaxonomy[];\n    logo: IImageObject;\n    backgroundImage: IImageObject;\n    numberOfEmployees: number;\n    parentOrganization: IOrganizationResponse;\n    slogan: string;\n    siret: number;\n    smokingAllowed: boolean;\n    openNow: boolean;\n    openingHoursSpecification: IOpeningHoursSpecification[];\n    isAccessibleForFree: boolean;\n    isComingSoon: boolean;\n    photos: IImageObject[];\n    serviceType: ITaxonomy[];\n    types: string[];\n    advertisingText: string;\n    communication: IOrganizationCommunication;\n    geopoint: string;\n    createdAt: Date;\n    updatedAt: Date;\n    metadatas: { [key: string]: any };\n    categories: ICategoryResponse[];\n    products: IProductResponse[];\n    events: ICalendarEvent[];\n    isRoaming: boolean;\n    is: boolean;\n    calendarId: string;\n    opinion: number;\n    opinionCount: number;\n    blackListPersons: string[];\n    thirdParty: {\n        facebook: {\n        accessToken: string;\n        longLivedUserAccessToken: string;\n        expirationDate: Date;\n        userID: string;\n        };\n    };\n    statistics: {\n        firstVisit: Date;\n        totalOrder: number;\n        amountTotalOrder: number;\n        subscription: ISubscription;\n        opinion: number;\n    };\n    quotas: { [key: string]: IQuotas };\n    configs: IPersonConfigValue[];\n    displayed: {\n        actualityContent: string;\n        actualityTitle: string;\n        backgroundImg: string;\n        logoImg: string;\n        highlightImg: string;\n        city: string;\n        id: string;\n        isBarService: boolean;\n        isOpen: boolean;\n        latitude: number;\n        longitude: number;\n        name: string;\n        position: string;\n        type: string;\n        weekTime: IDays[];\n        metadatas: any;\n    }\n}\n")))}c.isMDXComponent=!0},90:function(n,e,t){"use strict";t.d(e,"a",(function(){return u})),t.d(e,"b",(function(){return m}));var i=t(0),o=t.n(i);function a(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function r(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(n);e&&(i=i.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,i)}return t}function s(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?r(Object(t),!0).forEach((function(e){a(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function g(n,e){if(null==n)return{};var t,i,o=function(n,e){if(null==n)return{};var t,i,o={},a=Object.keys(n);for(i=0;i<a.length;i++)t=a[i],e.indexOf(t)>=0||(o[t]=n[t]);return o}(n,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(n);for(i=0;i<a.length;i++)t=a[i],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(o[t]=n[t])}return o}var l=o.a.createContext({}),c=function(n){var e=o.a.useContext(l),t=e;return n&&(t="function"==typeof n?n(e):s(s({},e),n)),t},u=function(n){var e=c(n.components);return o.a.createElement(l.Provider,{value:e},n.children)},b={inlineCode:"code",wrapper:function(n){var e=n.children;return o.a.createElement(o.a.Fragment,{},e)}},p=o.a.forwardRef((function(n,e){var t=n.components,i=n.mdxType,a=n.originalType,r=n.parentName,l=g(n,["components","mdxType","originalType","parentName"]),u=c(t),p=i,m=u["".concat(r,".").concat(p)]||u[p]||b[p]||a;return t?o.a.createElement(m,s(s({ref:e},l),{},{components:t})):o.a.createElement(m,s({ref:e},l))}));function m(n,e){var t=arguments,i=e&&e.mdxType;if("string"==typeof n||i){var a=t.length,r=new Array(a);r[0]=p;var s={};for(var g in e)hasOwnProperty.call(e,g)&&(s[g]=e[g]);s.originalType=n,s.mdxType="string"==typeof n?n:i,r[1]=s;for(var l=2;l<a;l++)r[l]=t[l];return o.a.createElement.apply(null,r)}return o.a.createElement.apply(null,t)}p.displayName="MDXCreateElement"}}]);